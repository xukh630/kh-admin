<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <description>apache shiro配置</description>

    <!-- 加载资源文件 -->
    <context:property-placeholder
            location="classpath*:config/systemConfig.properties" file-encoding="UTF-8" ignore-unresolvable="true"/>

    <!--自定义realm-->
    <bean id="securityRealm" class="com.kh.admin.api.shiro.realm.SecurityRealm">
        <property name="credentialsMatcher" ref="md5Matcher"/>
    </bean>

    <!--密码加密策略-->
    <bean id="md5Matcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
        <property name="hashIterations" value="1"/>
    </bean>

    <!-- 自定义认证-->
    <bean id="newAuthc" class="com.kh.admin.api.shiro.filter.CaptchaFormAuthenticationFilter">
        <property name="loginUrl" value="/user/login"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- shiro的核心安全接口  -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接 -->
        <property name="loginUrl" value="${shiro.login.url}"/>
        <!-- 登陆成功后要跳转的连接 -->
        <!--<property name="successUrl" value="${shiro.index.url}"/>-->
        <!-- 没有权限要跳转的链接 -->
        <property name="unauthorizedUrl" value="${shiro.unAuth.url}"/>
        <property name="filters">
            <util:map>
                <entry key="newAuthc" value-ref="newAuthc"/>
            </util:map>
        </property>
        <!-- shiro连接约束配置-->
        <property name="filterChainDefinitions">
            <value>
                /user/login = anon
                /user/loginStatus = anon
                /user/logout = anon
                /*/user/login = anon
                /*/user/loginStatus = anon
                /*/user/logout = anon
                / = anon
                /** = newAuthc
            </value>
        </property>
    </bean>

    <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:cache/ehcache-shiro.xml"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid-lp-www"/>
        <property name="path" value="/"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="86400"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="1800000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="securityRealm"/>
            </list>
        </property>
        <!-- cacheManager,集合spring缓存工厂 -->
        <property name="cacheManager" ref="shiroEhcacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->
    </bean>

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- rememberMe cookie -->
    <!--<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
    <!--<constructor-arg value="rememberMe"/>-->
    <!--&lt;!&ndash; 记住我cookie生效时间30天 &ndash;&gt;-->
    <!--<property name="maxAge" value="2592000"/>-->
    <!--</bean>-->

    <!-- rememberMeManager管理器 -->
    <!--<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">-->
    <!--<property name="cipherKey"-->
    <!--value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>-->
    <!--<property name="cookie" ref="rememberMeCookie"/>-->
    <!--</bean>-->

    <!-- AOP式方法级权限检查  -->
    <!--<aop:config proxy-target-class="true"/>-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
    <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

</beans>
